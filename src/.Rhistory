require(pheatmap)
require(data.table)
require(reshape2)
library(tidyr)
# Р—Р°РіСЂСѓР¶Р°РµРј РїР°РєРµС‚С‹. Р•СЃР»Рё РЅРµ Р±СѓРґСѓС‚ Р·Р°РіСЂСѓР¶Р°С‚СЃСЏ, РЅР°РґРѕ РёС… СѓСЃС‚Р°РЅРѕРІРёС‚СЊ, РЅР°РїСЂРёРјРµСЂ
install.packages(c('ggplot','data.table', 'reshape2','tidyr',"pheatmap") - РІ РєР°РІС‹С‡РєР°С… - РёРјСЏ РїР°РєРµС‚Р°
# Р—Р°РіСЂСѓР¶Р°РµРј РїР°РєРµС‚С‹. Р•СЃР»Рё РЅРµ Р±СѓРґСѓС‚ Р·Р°РіСЂСѓР¶Р°С‚СЃСЏ, РЅР°РґРѕ РёС… СѓСЃС‚Р°РЅРѕРІРёС‚СЊ, РЅР°РїСЂРёРјРµСЂ
install.packages(c('ggplot','data.table', 'reshape2','tidyr',"pheatmap")
require(ggplot2)
# Р—Р°РіСЂСѓР¶Р°РµРј РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅС‹Рµ С„СѓРЅРєС†РёРё РґР»СЏ РёРЅРґРµРєСЃР° РљР°Р»РёРЅСЃРєРѕРіРѕ-РҐР°СЂР°Р±Р°С€Р°
source("clustering_functions.R")
# Р—Р°РіСЂСѓР¶Р°РµРј РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅС‹Рµ С„СѓРЅРєС†РёРё РґР»СЏ РёРЅРґРµРєСЃР° РљР°Р»РёРЅСЃРєРѕРіРѕ-РҐР°СЂР°Р±Р°С€Р°
source("E:\R\Гармонизация++BGRS_2_new\clustering_functions.R")
# Р—Р°РіСЂСѓР¶Р°РµРј РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅС‹Рµ С„СѓРЅРєС†РёРё РґР»СЏ РёРЅРґРµРєСЃР° РљР°Р»РёРЅСЃРєРѕРіРѕ-РҐР°СЂР°Р±Р°С€Р°
source("E:\\R\\Гармонизация++BGRS_2_new\\clustering_functions.R")
# Р—Р°РіСЂСѓР¶Р°РµРј РїР°РєРµС‚С‹. Р•СЃР»Рё РЅРµ Р±СѓРґСѓС‚ Р·Р°РіСЂСѓР¶Р°С‚СЃСЏ, РЅР°РґРѕ РёС… СѓСЃС‚Р°РЅРѕРІРёС‚СЊ, РЅР°РїСЂРёРјРµСЂ
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap")
# Р—Р°РіСЂСѓР¶Р°РµРј РїР°РєРµС‚С‹. Р•СЃР»Рё РЅРµ Р±СѓРґСѓС‚ Р·Р°РіСЂСѓР¶Р°С‚СЃСЏ, РЅР°РґРѕ РёС… СѓСЃС‚Р°РЅРѕРІРёС‚СЊ, РЅР°РїСЂРёРјРµСЂ
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
# Р—Р°РіСЂСѓР¶Р°РµРј РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅС‹Рµ С„СѓРЅРєС†РёРё РґР»СЏ РёРЅРґРµРєСЃР° РљР°Р»РёРЅСЃРєРѕРіРѕ-РҐР°СЂР°Р±Р°С€Р°
source("E:\\R\\Гармонизация++BGRS_2_new\\clustering_functions.R")
require(ggplot2)
require(pheatmap)
require(pheatmap)
library(tools)
install.packages(c('ggplot','data.table', 'reshape2','tidyr','dplyr',"pheatmap"))
require(ggplot2)
require(reshape2)
library(tidyr)
require(installr)
install.packages('installr')
install.packages('installr')
names <- c('Homo_Li_KPDS')
library(ggplot2)
outdir <- '../images/'
for (NAME in names)
{
bed_df <- read.delim(paste0('../data/',NAME, '.bed'),
as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = outdir,width = 10, dpi = 600)
}
setwd('C:/Users/Артём/Desktop/HSE/Бионформатика/Проект/Мамедов/hse21_H3K36me3_G4_human/src/')
bed_df <- read.delim(paste0('../data/',NAME, '.bed'),
as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = outdir,width = 10, dpi = 600)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
setwd('C:/Users/Артём/Desktop/HSE/Бионформатика/Проект/Ямпольская/src/')
setwd('C:/Users/Артём/Desktop/HSE/Бионформатика/Проект/Ямпольская/project_x/src/')
###
data_dir <- '../data/'
out_dir <- '../images/'
name_1 <- 'Homo_Li_KPDS'
BED_FN_1 <- paste0(data_dir, name_1, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno_1 <- annotatePeak(BED_FN_1, tssRegion=c(-3000, 3000),
TxDb=txdb, annoDb="org.Hs.eg.db")
plotAnnoPie(peakAnno_1)
pdf(paste0(out_dir, 'chip_seeker.', name_1, '.plotAnnoPie.pdf'))
plotAnnoPie(peakAnno_1)
dev.off()
library(ggplot2)
setwd('C:/Users/Артём/Desktop/HSE/Бионформатика/Проект/Мамедов/hse21_H3K36me3_G4_human/src/')
names <- c('H3K36me3_GM12878.intersect_with_Homo_Li_KPDS')
outdir <- '../images/'
for (NAME in names)
{
bed_df <- read.delim(paste0('../data/',NAME, '.bed'),
as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = outdir,width = 10, dpi = 600)
}
setwd('C:/Users/Артём/Desktop/HSE/Бионформатика/Проект/Ямпольская/project_x/src/')
names <- c('H3K36me3_HepG2.intersect_with_Homo_Li_KPDS')
outdir <- '../images/'
for (NAME in names)
{
bed_df <- read.delim(paste0('../data/',NAME, '.bed'),
as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = outdir,width = 10, dpi = 600)
}
BiocManager::install("ChIPpeakAnno")
